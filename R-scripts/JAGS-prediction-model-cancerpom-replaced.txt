model {


###PRIORS FOR LATENT CLASS MODEL

# priors for sequential model for ordinal eta as outcome
cancer_inv_sigma_sq ~ dgamma(alpha, beta)
cancer_sigma_sq <- 1/cancer_inv_sigma_sq
for (index in 1:npred_cancer) {
  cancer_coef_mean[index] ~ dnorm(0,1)
}
cancer_int1 ~ dnorm(-0.16, 1) 
cancer_int2 ~ dnorm(0.71, 1)
cancer_int3 ~ dnorm(1.15, 1)
for(index in 1:npred_cancer) {
  cancer_slope1[index] ~ dnorm(cancer_coef_mean[index], cancer_inv_sigma_sq)
  cancer_slope2[index] ~ dnorm(cancer_coef_mean[index], cancer_inv_sigma_sq)
  cancer_slope3[index] ~ dnorm(cancer_coef_mean[index], cancer_inv_sigma_sq)
}


###PRIORS FOR PSA MIXED MODEL

#model correlated random effects distribution
scale_prior_range <- 100
gaussian_prior_prec <- 0.01
for (index in 1:npred_ranef_psa) {
	scale_ranef_mean_psa[index] ~ dunif(0,scale_prior_range)
	for(k in 1:nlevel_cancer_bin) {
		mu_raw[index, k] ~ dnorm(0, gaussian_prior_prec)
		mu[index, k] <- scale_ranef_mean_psa[index] * mu_raw[index,k]
	}  
}
for(k in 1:nlevel_cancer_bin) {
	ranef_intercept[k] <- mu[1, k]
	ranef_slope[k] <- mu[2, k]
}
	
#same covariance matrix (Sigma_B) across latent classes
Tau_B_raw ~ dwish(I_npred_ranef_psa[,], (npred_ranef_psa+1))
Sigma_B_raw[1:npred_ranef_psa, 1:npred_ranef_psa] <- inverse(Tau_B_raw[1:npred_ranef_psa, 1:npred_ranef_psa])
for (index in 1:npred_ranef_psa) {
		sigma[index] <- scale_ranef_mean_psa[index] * sqrt(Sigma_B_raw[index, index]) 
}
ranef_var_intercept <- sigma[1]
ranef_var_slope <- sigma[2]
rho_int_slope <- Sigma_B_raw[1, 2] / sqrt(Sigma_B_raw[1, 1] * Sigma_B_raw[2, 2])
ranef_cov <- rho_int_slope * ranef_var_intercept * ranef_var_slope

#residual variance, independent of correlated random effects, same across classes
resid_var_prior_range <- 1
resid_var_psa ~ dunif(0, resid_var_prior_range)
tau_res <- pow(resid_var_psa, -2)

#fixed effects
for(index in 1:npred_fixef_psa) {
	fixef_coefficient[index] ~ dnorm(0, gaussian_prior_prec)
}



##proportional odds regression for biopsy grade
#thresholds/intercept
for(k in 1:(nlevel_cancer-1)) {
  pgg_intercept0[k] ~ dnorm(0,gaussian_prior_prec)
}
pgg_intercept[1:(nlevel_cancer - 1)] <- sort(pgg_intercept0)
#proportional odds coefficients
for(index in 1:npred_pgg) {
  pgg_slope[index] ~ dnorm(0,gaussian_prior_prec)
}

for (index in (npred_pgg + 1):(npred_pgg + (nlevel_cancer - 1))) {
  pgg_slope[index] ~ dnorm(0, gaussian_prior_prec)T(-1,)
}


###LIKELIHOOD


##latent variable for true cancer state
##sequential logistic regression
for(j in 1:npat){ 
  exponent1[j] <- cancer_int1 + inprod(cancer_slope1[1:npred_cancer], modmat_cancer[j,1:npred_cancer])
  exponent2[j] <- cancer_int2 + inprod(cancer_slope2[1:npred_cancer], modmat_cancer[j,1:npred_cancer])
  exponent3[j] <- cancer_int3 + inprod(cancer_slope3[1:npred_cancer], modmat_cancer[j,1:npred_cancer])
  p_eta[j, 1] <- exp(exponent1[j])/(1+exp(exponent1[j]))
  p_eta[j, 2] <- 1/(1+exp(exponent1[j])) * exp(exponent2[j])/(1+exp(exponent2[j]))
  p_eta[j, 3] <- 1/(1+exp(exponent1[j])) * 1/(1+exp(exponent2[j])) * exp(exponent3[j])/(1+exp(exponent3[j]))
  p_eta[j, 4] <- 1- p_eta[j, 1] - p_eta[j, 2] - p_eta[j, 3]
}


for(i in 1:npat_cancer_known) {
  cancer_data[i] ~ dcat(p_eta[i, 1:nlevel_cancer])
  eta[i] <- cancer_data[i]
  eta.bin[i] <- step(eta[i]-2) + 1
} #this is for those with path reports from SURG, eta known

for(i in (npat_cancer_known+1):npat) {
  cancer_state[(i-npat_cancer_known)] ~ dcat(p_eta[i, 1:nlevel_cancer])
  eta[i] <- cancer_state[(i-npat_cancer_known)]
  eta.bin[i] <- step(eta[i]-2) + 1
}  #for those without SURG

##linear mixed effects model for PSA
#generate random intercept and slope for individual given latent class
for (i in 1:npat) {
	B_raw[i, 1:npred_ranef_psa] ~ dmnorm(mu_raw[1:npred_ranef_psa, eta.bin[i]], Tau_B_raw[1:npred_ranef_psa, 1:npred_ranef_psa])
	for(index in 1:npred_ranef_psa) {
	  ranef[i, index] <- scale_ranef_mean_psa[index] * B_raw[i, index]
	} 
}

#fit LME
for(j in 1:nobs_psa){
	mu_obs_psa[j] <- inprod(ranef[psa_patient_index_map[j], 1:npred_ranef_psa], modmat_ranef_psa[j, 1:npred_ranef_psa]) + inprod(fixef_coefficient[1:npred_fixef_psa], modmat_fixef_psa[j,1:npred_fixef_psa])
	log_psa_data[j] ~ dnorm(mu_obs_psa[j], tau_res) 
}



### BIOPSY OUTCOMES AND SURGERY RECEIVED

##proportional odds regression for biopsy upgrading
for(j in 1:npat_pgg) {
	lin.pred[j] <- inprod(pgg_slope[1:npred_pgg], modmat_pgg[j,1:npred_pgg]) + 
	pgg_slope[(npred_pgg + 1)] * step(eta[pgg_patient_index_map[j]] - 2) + 
	pgg_slope[(npred_pgg + 2)] * step(eta[pgg_patient_index_map[j]] - 3) + 
	pgg_slope[(npred_pgg + 3)] * step(eta[pgg_patient_index_map[j]] - 4)
	logit(cuml.p_rc[j, 1]) <- pgg_intercept[1] - lin.pred[j]
	p_rc[j,1] <- cuml.p_rc[j,1]
	for(k in 2:(nlevel_cancer-1)) {
		logit(cuml.p_rc[j,k]) <- pgg_intercept[k] - lin.pred[j]
		p_rc[j,k] <- cuml.p_rc[j,k] - cuml.p_rc[j,(k-1)] 
	}
	p_rc[j,nlevel_cancer] <- 1 - cuml.p_rc[j, (nlevel_cancer-1)]
	pgg_data[j] ~ dcat(p_rc[j, 1:nlevel_cancer]) 
}

 }
